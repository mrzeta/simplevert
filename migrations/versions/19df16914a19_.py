"""Adds tracking for temperature, rejected shares, and hashrates each in their own set of timeslice tables.

Revision ID: 19df16914a19
Revises: 58441c58e37e
Create Date: 2014-03-15 12:50:30.998479

"""

# revision identifiers, used by Alembic.
revision = '19df16914a19'
down_revision = '58441c58e37e'

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('one_hour_hashrate',
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('device', sa.Integer(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('worker', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('user', 'device', 'time', 'worker')
    )
    op.create_table('five_minute_reject',
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('worker', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('user', 'time', 'worker')
    )
    op.create_table('five_minute_hashrate',
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('device', sa.Integer(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('worker', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('user', 'device', 'time', 'worker')
    )
    op.create_table('one_minute_reject',
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('worker', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('user', 'time', 'worker')
    )
    op.create_table('one_hour_reject',
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('worker', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('user', 'time', 'worker')
    )
    op.create_table('one_minute_hashrate',
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('device', sa.Integer(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('worker', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('user', 'device', 'time', 'worker')
    )
    op.create_table('one_hour_temperature',
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('device', sa.Integer(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('worker', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('user', 'device', 'time', 'worker')
    )
    op.create_table('five_minute_temperature',
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('device', sa.Integer(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('worker', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('user', 'device', 'time', 'worker')
    )
    op.create_table('one_minute_temperature',
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('device', sa.Integer(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('worker', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('user', 'device', 'time', 'worker')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('one_minute_temperature')
    op.drop_table('five_minute_temperature')
    op.drop_table('one_hour_temperature')
    op.drop_table('one_minute_hashrate')
    op.drop_table('one_hour_reject')
    op.drop_table('one_minute_reject')
    op.drop_table('five_minute_hashrate')
    op.drop_table('five_minute_reject')
    op.drop_table('one_hour_hashrate')
    ### end Alembic commands ###
